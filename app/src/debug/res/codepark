if (ContextCompat.checkSelfPermission(this, Manifest.permission.SYSTEM_ALERT_WINDOW) != PackageManager.PERMISSION_GRANTED) {
    Log.d(Constants.DBG_CHATHEAD, "Permission is not granted");

    if (ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission.SYSTEM_ALERT_WINDOW)) {
        Log.d(Constants.DBG_CHATHEAD, "Permission was denied in the past, should show rationale");
        showMessageOKCancel(getString(R.string.perm_chathead), new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                ActivityCompat.requestPermissions(MainActivity.this, new String[] {Manifest.permission.SYSTEM_ALERT_WINDOW}, 123);
            }
        });
    } else {
        ActivityCompat.requestPermissions(MainActivity.this, new String[] {Manifest.permission.SYSTEM_ALERT_WINDOW}, 123);
    }
}



@Override
public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
    switch (requestCode) {
        case Constants.CHATHEAD_PERMISSION:
            if (grantResults[0] == PackageManager.PERMISSION_GRANTED){
                Log.d(Constants.DBG_CHATHEAD, "User granted permission");
                Intent intent = new Intent(this, FloatingViewService.class);
                startService(intent);
            } else {
                Log.d(Constants.DBG_CHATHEAD, "User denied permission");
                Toast denied_t = Toast.makeText(this, getString(R.string.perm_chathead_denied), Toast.LENGTH_LONG);
                denied_t.show();
            }

        default:
            super.onRequestPermissionsResult(requestCode, permissions, grantResults);
    }
}

, new DialogInterface.OnClickListener(){
                @Override
                public void onClick(DialogInterface dialog, int which) {
                    Toast denied_t = Toast.makeText(MainActivity.this, getString(R.string.perm_chathead_denied), Toast.LENGTH_LONG);
                    denied_t.show();
                    overlay = false;
                }
            }

